#
# This file is distributed as part of Xilinx ARM SDK
#
# Copyright (c) 2020 - 2021,  Xilinx, Inc.
# All rights reserved.
#
Index: u-boot-LSDK-20.04-lx2160ayrk/arch/arm/Kconfig
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/arch/arm/Kconfig
+++ u-boot-LSDK-20.04-lx2160ayrk/arch/arm/Kconfig
@@ -1203,6 +1203,21 @@ config TARGET_LX2160AQDS
 	  is a high-performance development platform that supports the
 	  QorIQ LX2160A/LX2120A/LX2080A Layerscape Architecture processor.
 
+config TARGET_LX2160AYRK
+	bool "Support lx2160ayrk"
+	select ARCH_LX2160A
+	select ARCH_MISC_INIT
+	select ARM64
+	select ARMV8_MULTIENTRY
+	select ARCH_SUPPORT_TFABOOT
+	select BOARD_LATE_INIT
+	select RESV_RAM
+	help
+	  Support for NXP LX2160AYRK platform.
+	  The lx2160ayrk (Solarflare LX2160A York Diagtherboard)
+	  is a high-performance development platform that supports the
+	  QorIQ LX2160A/LX2120A/LX2080A Layerscape Architecture processor.
+
 config TARGET_HIKEY
 	bool "Support HiKey 96boards Consumer Edition Platform"
 	select ARM64
Index: u-boot-LSDK-20.04-lx2160ayrk/arch/arm/cpu/armv8/Kconfig
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/arch/arm/cpu/armv8/Kconfig
+++ u-boot-LSDK-20.04-lx2160ayrk/arch/arm/cpu/armv8/Kconfig
@@ -110,6 +110,7 @@ config PSCI_RESET
 		   !TARGET_LS1046AFRWY && \
 		   !TARGET_LS2081ARDB && !TARGET_LX2160ARDB && \
 		   !TARGET_LX2160AQDS && \
+		   !TARGET_LX2160AYRK && \
 		   !ARCH_UNIPHIER && !TARGET_S32V234EVB
 	help
 	  Most armv8 systems have PSCI support enabled in EL3, either through
Index: u-boot-LSDK-20.04-lx2160ayrk/arch/arm/dts/fsl-lx2160a-yrk.dts
===================================================================
--- /dev/null
+++ u-boot-LSDK-20.04-lx2160ayrk/arch/arm/dts/fsl-lx2160a-yrk.dts
@@ -0,0 +1,56 @@
+// SPDX-License-Identifier: GPL-2.0+ OR X11
+/*
+ * Solarflare NXP LX2160AYRK device tree source
+ *
+ * Author:	Priyanka Jain <priyanka.jain@nxp.com>
+ *		Sriram Dash <sriram.dash@nxp.com>
+ *
+ * Copyright 2018 NXP
+ *
+ */
+
+/dts-v1/;
+
+#include "fsl-lx2160a.dtsi"
+
+/ {
+	model = "Solarflare NXP Layerscape LX2160AYRK Board";
+	compatible = "fsl,lx2160ayrk", "fsl,lx2160a";
+
+	aliases {
+		spi0 = &fspi;
+	};
+};
+
+&fspi {
+	bus-num = <0>;
+	status = "okay";
+	fspi-has-second-chip;
+
+	qflash0: mt35xu02gcba@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "spi-flash";
+		spi-max-frequency = <20000000>;
+		reg = <0>;
+		/* The following setting enables 1-1-8 (CMD-ADDR-DATA) mode */
+		fspi-rx-bus-width = <8>; /* 8 FSPI Rx lines */
+		fspi-tx-bus-width = <1>; /* 1 FSPI Tx line */
+	};
+
+	/*
+	 * MCR2[SAMEDEVICEEN] bit is enabled in FlexSPI controller for
+	 * LX2160AYRK.It has the same type of flash slave device
+	 * connected on both A0 and A1. No need to provide node info 
+	 * for second flash device.
+	 */
+};
+
+&i2c0 {
+	status = "okay";
+	u-boot,dm-pre-reloc;
+};
+
+&esdhc0 {
+	status = "okay";
+};
Index: u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/Kconfig
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/board/freescale/lx2160a/Kconfig
+++ u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/Kconfig
@@ -24,6 +24,23 @@ config QSFP_EEPROM
 source "board/freescale/common/Kconfig"
 endif
 
+if TARGET_LX2160AYRK
+
+config SYS_BOARD
+	default "lx2160a"
+
+config SYS_VENDOR
+	default "freescale"
+
+config SYS_SOC
+	default "fsl-layerscape"
+
+config SYS_CONFIG_NAME
+	default "lx2160ayrk"
+
+source "board/freescale/common/Kconfig"
+endif
+
 if TARGET_LX2160AQDS
 
 config SYS_BOARD
Index: u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/Makefile
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/board/freescale/lx2160a/Makefile
+++ u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/Makefile
@@ -7,4 +7,5 @@
 obj-y += lx2160a.o
 obj-y += ddr.o
 obj-$(CONFIG_TARGET_LX2160ARDB) += eth_lx2160ardb.o
+obj-$(CONFIG_TARGET_LX2160AYRK) += eth_lx2160ayrk.o
 obj-$(CONFIG_TARGET_LX2160AQDS) += eth_lx2160aqds.o
Index: u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/eth_lx2160ayrk.c
===================================================================
--- /dev/null
+++ u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/eth_lx2160ayrk.c
@@ -0,0 +1,44 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2018 NXP
+ *
+ */
+
+#include <common.h>
+#include <command.h>
+#include <netdev.h>
+#include <malloc.h>
+#include <fsl_mdio.h>
+#include <miiphy.h>
+#include <phy.h>
+#include <fm_eth.h>
+#include <asm/io.h>
+#include <exports.h>
+#include <asm/arch/fsl_serdes.h>
+#include <fsl-mc/fsl_mc.h>
+#include <fsl-mc/ldpaa_wriop.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+void fsl_rgmii_init(void)
+{
+/* placeholder for missing dpaa2 networking */
+}
+
+int board_eth_init(bd_t *bis)
+{
+#if defined(CONFIG_FSL_MC_ENET)
+	cpu_eth_init(bis);
+#endif /* CONFIG_FSL_MC_ENET */
+
+	return pci_eth_init(bis);
+}
+
+#if defined(CONFIG_RESET_PHY_R)
+void reset_phy(void)
+{
+#if defined(CONFIG_FSL_MC_ENET)
+	mc_env_boot();
+#endif
+}
+#endif /* CONFIG_RESET_PHY_R */
Index: u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/lx2160a.c
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/board/freescale/lx2160a/lx2160a.c
+++ u-boot-LSDK-20.04-lx2160ayrk/board/freescale/lx2160a/lx2160a.c
@@ -24,8 +24,10 @@
 #include <asm/arch/config.h>
 #include <asm/arch/fsl_serdes.h>
 #include <asm/arch/soc.h>
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 #include "../common/qixis.h"
 #include "../common/vid.h"
+#endif
 #include <fsl_immap.h>
 #include <asm/arch-fsl-layerscape/fsl_icid.h>
 #include <asm/gic-v3.h>
@@ -75,6 +77,7 @@ U_BOOT_DEVICE(nxp_serial1) = {
 	.platdata = &serial1,
 };
 
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 int select_i2c_ch_pca9547(u8 ch)
 {
 	int ret;
@@ -116,6 +119,7 @@ int select_i2c_ch_pca9547_sec(u8 ch)
 
 	return 0;
 }
+#endif
 
 static void uart_get_clock(void)
 {
@@ -281,6 +285,8 @@ int esdhc_status_fixup(void *blob, const
 #if defined(CONFIG_TARGET_LX2160AQDS)
 	/* Enable esdhc and dspi DT nodes based on RCW fields */
 	esdhc_dspi_status_fixup(blob);
+#elif defined(CONFIG_TARGET_LX2160AYRK)
+	/* Leave things as is for YRK */
 #else
 	/* Enable both esdhc DT nodes for LX2160ARDB */
 	do_fixup_by_compat(blob, compat, "status", "okay",
@@ -292,7 +298,11 @@ int esdhc_status_fixup(void *blob, const
 #if defined(CONFIG_VID)
 int i2c_multiplexer_select_vid_channel(u8 channel)
 {
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 	return select_i2c_ch_pca9547(channel);
+#else
+	return 0;
+#endif
 }
 
 int init_func_vid(void)
@@ -315,7 +325,9 @@ int checkboard(void)
 {
 	enum boot_src src = get_boot_src();
 	char buf[64];
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 	u8 sw;
+#endif
 #ifdef CONFIG_TARGET_LX2160AQDS
 	int clock;
 	static const char *const freq[] = {"100", "125", "156.25",
@@ -325,20 +337,25 @@ int checkboard(void)
 #endif
 
 	cpu_name(buf);
-#ifdef CONFIG_TARGET_LX2160AQDS
+#if defined(CONFIG_TARGET_LX2160AYRK)
+	printf("Board: %s-YRK, ", buf);
+#elif defined(CONFIG_TARGET_LX2160AQDS)
 	printf("Board: %s-QDS, ", buf);
 #else
 	printf("Board: %s-RDB, ", buf);
 #endif
 
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 	sw = QIXIS_READ(arch);
 	printf("Board version: %c, boot from ", (sw & 0xf) - 1 + 'A');
+#endif
 
 	if (src == BOOT_SOURCE_SD_MMC) {
 		puts("SD\n");
 	} else if (src == BOOT_SOURCE_SD_MMC2) {
 		puts("eMMC\n");
 	} else {
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 		sw = QIXIS_READ(brdcfg[0]);
 		sw = (sw >> QIXIS_XMAP_SHIFT) & QIXIS_XMAP_MASK;
 		switch (sw) {
@@ -357,8 +374,14 @@ int checkboard(void)
 			printf("invalid setting, xmap: %d\n", sw);
 			break;
 		}
+#else
+		puts("FlexSPI\n");
+#endif
 	}
-#ifdef CONFIG_TARGET_LX2160AQDS
+#if defined(CONFIG_TARGET_LX2160AYRK)
+	puts("SERDES1 Reference: Clock1 = 161.13MHz\n");
+	puts("SERDES2 Reference: Clock1 = 100MHz\n");
+#elif defined(CONFIG_TARGET_LX2160AQDS)
 	printf("FPGA: v%d (%s), build %d",
 	       (int)QIXIS_READ(scver), qixis_read_tag(buf),
 	       (int)qixis_read_minor());
@@ -589,7 +612,9 @@ int board_init(void)
 	gd->env_addr = (ulong)&default_environment[0];
 #endif
 
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 	select_i2c_ch_pca9547(I2C_MUX_CH_DEFAULT);
+#endif
 
 #if defined(CONFIG_FSL_MC_ENET) && defined(CONFIG_TARGET_LX2160ARDB)
 	/* invert AQR107 IRQ pins polarity */
@@ -645,7 +670,9 @@ void fdt_fixup_board_enet(void *fdt)
 	if (get_mc_boot_status() == 0 &&
 	    (is_lazy_dpl_addr_valid() || get_dpl_apply_status() == 0)) {
 		fdt_status_okay(fdt, offset);
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 		fdt_fixup_board_phy(fdt);
+#endif
 	} else {
 		fdt_status_fail(fdt, offset);
 	}
@@ -687,7 +714,9 @@ int ft_board_setup(void *blob, bd_t *bd)
 
 	ft_cpu_setup(blob, bd);
 
+#if defined(CONFIG_FSL_MC_ENET)
 	fdt_fixup_mc_ddr(&mc_memory_base, &mc_memory_size);
+#endif
 
 	if (mc_memory_base != 0)
 		mc_memory_bank++;
@@ -704,7 +733,12 @@ int ft_board_setup(void *blob, bd_t *bd)
 	}
 
 #ifdef CONFIG_GIC_V3_ITS
-	gic_lpi_base = gd->arch.resv_ram - GIC_LPI_SIZE;
+	if (gd->arch.resv_ram == base[2])
+		gic_lpi_base = base[1] + size[1] - GIC_LPI_SIZE;
+	else if (gd->arch.resv_ram == base[1])
+		gic_lpi_base = base[0] + size[0] - GIC_LPI_SIZE;
+	else
+		gic_lpi_base = gd->arch.resv_ram - GIC_LPI_SIZE;
 	gic_lpi_tables_init(gic_lpi_base, cpu_numcores());
 	fdt_fixup_gic_lpi_memory(blob, gic_lpi_base);
 #endif
@@ -748,6 +782,7 @@ int ft_board_setup(void *blob, bd_t *bd)
 }
 #endif
 
+#if defined(CONFIG_TARGET_LX2160AQDS) || defined(CONFIG_TARGET_LX2160ARDB)
 void qixis_dump_switch(void)
 {
 	int i, nr_of_cfgsw;
@@ -761,3 +796,4 @@ void qixis_dump_switch(void)
 		printf("SW%d = (0x%02x)\n", i, QIXIS_READ(cms[1]));
 	}
 }
+#endif
Index: u-boot-LSDK-20.04-lx2160ayrk/configs/lx2160ayrk_tfa_SECURE_BOOT_defconfig
===================================================================
--- /dev/null
+++ u-boot-LSDK-20.04-lx2160ayrk/configs/lx2160ayrk_tfa_SECURE_BOOT_defconfig
@@ -0,0 +1,96 @@
+CONFIG_ARM=y
+CONFIG_TARGET_LX2160AYRK=y
+CONFIG_TFABOOT=y
+CONFIG_SYS_TEXT_BASE=0x82000000
+CONFIG_SYS_MALLOC_F_LEN=0x6000
+# CONFIG_EMC2305 is not set
+CONFIG_SECURE_BOOT=y
+CONFIG_FSPI_AHB_EN_4BYTE=y
+CONFIG_NR_DRAM_BANKS=3
+CONFIG_ARMV8_SEC_FIRMWARE_SUPPORT=y
+CONFIG_SEC_FIRMWARE_ARMV8_PSCI=y
+# CONFIG_AHCI is not set
+# CONFIG_SCSI is not set
+# CONFIG_LIBATA is not set
+# CONFIG_SCSI_AHCI is not set
+CONFIG_FIT_VERBOSE=y
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_STDOUT_VIA_ALIAS=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="console=ttyAMA0,115200 root=/dev/ram0 earlycon=pl011,mmio32,0x21c0000 ramdisk_size=0x2000000 default_hugepagesz=1024m hugepagesz=1024m hugepages=2 pci=pcie_bus_perf"
+# CONFIG_USE_BOOTCOMMAND is not set
+
+CONFIG_LOGLEVEL=11
+CONFIG_SPL_LOGLEVEL=11
+CONFIG_DISPLAY_CPUINFO=y
+CONFIG_DISPLAY_BOARDINFO=y
+CONFIG_DISPLAY_BOARDINFO_LATE=y
+
+CONFIG_CMD_GREPENV=y
+# CONFIG_CMD_EEPROM is not set
+CONFIG_CMD_GPT=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_SF=y
+# CONFIG_CMD_SCSI is not set
+# CONFIG_CMD_USB is not set
+CONFIG_CMD_CACHE=y
+CONFIG_MP=y
+CONFIG_OF_CONTROL=y
+CONFIG_OF_BOARD_FIXUP=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-lx2160a-yrk"
+CONFIG_NET_RANDOM_ETHADDR=y
+CONFIG_DM=y
+# CONFIG_SATA_CEVA is not set
+CONFIG_CONS_INDEX=0
+CONFIG_DM_GPIO=y
+CONFIG_DM_I2C=y
+CONFIG_I2C_SET_DEFAULT_BUS_NUM=y
+CONFIG_I2C_DEFAULT_BUS_NUMBER=0
+CONFIG_DM_MMC=y
+CONFIG_FSL_ESDHC=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_MICRON=y
+CONFIG_SPI_FLASH_STMICRO=y
+# CONFIG_SPI_FLASH_USE_4K_SECTORS is not set
+# CONFIG_PHYLIB is not set
+# CONFIG_PHY_AQUANTIA is not set
+# CONFIG_PHY_ATHEROS is not set
+# CONFIG_PHY_CORTINA is not set
+# CONFIG_PHY_INPHI is not set
+CONFIG_E1000=y
+CONFIG_NETDEVICES=y
+# CONFIG_PHY_GIGE is not set
+CONFIG_CMD_NET=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_PXE=y
+# CONFIG_CMD_MII is not set
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_EXT2=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_DM_PCI_COMPAT=y
+CONFIG_PCIE_LAYERSCAPE_GEN4=y
+CONFIG_PCIE_LAYERSCAPE=y
+# CONFIG_DM_RTC is not set
+# CONFIG_RTC_PCF2127 is not set
+# CONFIG_DM_SCSI is not set
+CONFIG_DM_SERIAL=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_NXP_FSPI=y
+# CONFIG_USB is not set
+# CONFIG_DM_USB is not set
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_XHCI_DWC3 is not set
+CONFIG_NET=y
+CONFIG_RSA=y
+CONFIG_SPL_RSA=y
+CONFIG_RSA_SOFTWARE_EXP=y
+CONFIG_EFI_LOADER_BOUNCE_BUFFER=y
+CONFIG_HUSH_PARSER=y
+CONFIG_CMD_SETEXPR=y
+CONFIG_GIC_V3_ITS=y
Index: u-boot-LSDK-20.04-lx2160ayrk/configs/lx2160ayrk_tfa_defconfig
===================================================================
--- /dev/null
+++ u-boot-LSDK-20.04-lx2160ayrk/configs/lx2160ayrk_tfa_defconfig
@@ -0,0 +1,95 @@
+CONFIG_ARM=y
+CONFIG_TARGET_LX2160AYRK=y
+CONFIG_TFABOOT=y
+CONFIG_SYS_TEXT_BASE=0x82000000
+CONFIG_SYS_MALLOC_F_LEN=0x6000
+# CONFIG_EMC2305 is not set
+CONFIG_FSPI_AHB_EN_4BYTE=y
+CONFIG_NR_DRAM_BANKS=3
+CONFIG_ARMV8_SEC_FIRMWARE_SUPPORT=y
+CONFIG_SEC_FIRMWARE_ARMV8_PSCI=y
+# CONFIG_AHCI is not set
+# CONFIG_SCSI is not set
+# CONFIG_LIBATA is not set
+# CONFIG_SCSI_AHCI is not set
+CONFIG_FIT_VERBOSE=y
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_STDOUT_VIA_ALIAS=y
+CONFIG_BOOTDELAY=4
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="console=ttyAMA0,115200 root=/dev/ram0 earlycon=pl011,mmio32,0x21c0000 ramdisk_size=0x2000000 default_hugepagesz=1024m hugepagesz=1024m hugepages=2 pci=pcie_bus_perf"
+# CONFIG_USE_BOOTCOMMAND is not set
+
+CONFIG_LOGLEVEL=11
+CONFIG_SPL_LOGLEVEL=11
+CONFIG_DISPLAY_CPUINFO=y
+CONFIG_DISPLAY_BOARDINFO=y
+CONFIG_DISPLAY_BOARDINFO_LATE=y
+
+CONFIG_CMD_GREPENV=y
+# CONFIG_CMD_EEPROM is not set
+CONFIG_CMD_GPT=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_SF=y
+# CONFIG_CMD_SCSI is not set
+# CONFIG_CMD_USB is not set
+CONFIG_CMD_CACHE=y
+CONFIG_MP=y
+CONFIG_OF_CONTROL=y
+CONFIG_OF_BOARD_FIXUP=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-lx2160a-yrk"
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_ENV_IS_IN_SPI_FLASH=y
+CONFIG_NET_RANDOM_ETHADDR=y
+CONFIG_DM=y
+# CONFIG_SATA_CEVA is not set
+CONFIG_CONS_INDEX=0
+CONFIG_FSL_CAAM=y
+CONFIG_DM_GPIO=y
+CONFIG_DM_I2C=y
+CONFIG_I2C_SET_DEFAULT_BUS_NUM=y
+CONFIG_I2C_DEFAULT_BUS_NUMBER=0
+CONFIG_DM_MMC=y
+CONFIG_FSL_ESDHC=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_MICRON=y
+CONFIG_SPI_FLASH_STMICRO=y
+# CONFIG_SPI_FLASH_USE_4K_SECTORS is not set
+# CONFIG_PHYLIB is not set
+# CONFIG_PHY_AQUANTIA is not set
+# CONFIG_PHY_ATHEROS is not set
+# CONFIG_PHY_CORTINA is not set
+# CONFIG_PHY_INPHI is not set
+CONFIG_E1000=y
+CONFIG_NETDEVICES=y
+# CONFIG_PHY_GIGE is not set
+CONFIG_CMD_NET=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_PXE=y
+# CONFIG_CMD_MII is not set
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_EXT2=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_DM_PCI_COMPAT=y
+CONFIG_PCIE_LAYERSCAPE_GEN4=y
+CONFIG_PCIE_LAYERSCAPE=y
+# CONFIG_DM_RTC is not set
+# CONFIG_RTC_PCF2127 is not set
+# CONFIG_DM_SCSI is not set
+CONFIG_DM_SERIAL=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_NXP_FSPI=y
+# CONFIG_USB is not set
+# CONFIG_DM_USB is not set
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_XHCI_DWC3 is not set
+CONFIG_NET=y
+CONFIG_EFI_LOADER_BOUNCE_BUFFER=y
+CONFIG_HUSH_PARSER=y
+CONFIG_GIC_V3_ITS=y
Index: u-boot-LSDK-20.04-lx2160ayrk/include/configs/lx2160ayrk.h
===================================================================
--- /dev/null
+++ u-boot-LSDK-20.04-lx2160ayrk/include/configs/lx2160ayrk.h
@@ -0,0 +1,56 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright 2018 NXP
+ */
+
+#ifndef __LX2_YRK_H
+#define __LX2_YRK_H
+
+#include "lx2160a_common.h"
+
+#define CONFIG_ESDHC_DETECT_QUIRK 1
+
+#undef CONFIG_FSL_QIXIS
+
+/* VID */
+#define I2C_MUX_CH_VOL_MONITOR		0x0 /* unused */
+#define I2C_VOL_MONITOR_ADDR		0x4F
+#define CONFIG_VID_FLS_ENV		"lx2160ayrk_vdd_mv"
+#define CONFIG_VID
+
+/* The lowest and highest voltage allowed */
+#define VDD_MV_MIN			775
+#define VDD_MV_MAX			855
+
+/* PM Bus commands code for LTC4677 */
+#define PMBUS_CMD_PAGE                  0x0
+#define PMBUS_CMD_READ_VOUT             0x8B
+#define PMBUS_CMD_PAGE_PLUS_WRITE       0x05
+#define PMBUS_CMD_VOUT_COMMAND          0x21
+#define PWM_CHANNEL0                    0xff
+
+#define CONFIG_VOL_MONITOR_LTC3882_SET
+#define CONFIG_VOL_MONITOR_LTC3882_READ
+
+/* Initial environment variables */
+#define CONFIG_EXTRA_ENV_SETTINGS		\
+	EXTRA_ENV_SETTINGS			\
+	"lx2160ayrk_vdd_mv=825\0"		\
+	"BOARD=lx2160ayrk\0"			\
+	"xspi_bootcmd=echo Trying load from flexspi..;"		\
+		"sf probe 0:0 && sf read $load_addr "		\
+		"$kernel_start $kernel_size ; env exists secureboot &&"	\
+		"sf read $kernelheader_addr_r $kernelheader_start "	\
+		"$kernelheader_size && esbc_validate ${kernelheader_addr_r}; "\
+		" bootm $load_addr#$BOARD\0"			\
+	"sd_bootcmd=echo Trying load from sd card..;"		\
+		"mmcinfo; mmc read $load_addr "			\
+		"$kernel_addr_sd $kernel_size_sd ;"		\
+		"env exists secureboot && mmc read $kernelheader_addr_r "\
+		"$kernelhdr_addr_sd $kernelhdr_size_sd "	\
+		" && esbc_validate ${kernelheader_addr_r};"	\
+		"bootm $load_addr#$BOARD\0"
+
+#include <asm/fsl_secure_boot.h>
+
+#endif /* __LX2_YRK_H */
Index: u-boot-LSDK-20.04-lx2160ayrk/drivers/mtd/spi/spi-nor-ids.c
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/drivers/mtd/spi/spi-nor-ids.c
+++ u-boot-LSDK-20.04-lx2160ayrk/drivers/mtd/spi/spi-nor-ids.c
@@ -172,6 +172,7 @@ const struct flash_info spi_nor_ids[] =
 	{ INFO("mt25qu02g",   0x20bb22, 0, 64 * 1024, 4096, SECT_4K | USE_FSR | SPI_NOR_QUAD_READ | NO_CHIP_ERASE) },
 	{ INFO("mt35xu512aba", 0x2c5b1a, 0,  128 * 1024,  512, USE_FSR | SPI_NOR_4B_OPCODES) },
 	{ INFO("mt35xu02g",  0x2c5b1c, 0, 128 * 1024,  2048, USE_FSR | SPI_NOR_4B_OPCODES) },
+	{ INFO("mt35xu02g",  0x2c5b1c, 0x104100,  128 * 1024,  2048, USE_FSR | SECT_4K | SPI_NOR_4B_OPCODES) },
 #endif
 #ifdef CONFIG_SPI_FLASH_SPANSION	/* SPANSION */
 	/* Spansion/Cypress -- single (large) sector size only, at least
Index: u-boot-LSDK-20.04-lx2160ayrk/arch/arm/dts/Makefile
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/arch/arm/dts/Makefile
+++ u-boot-LSDK-20.04-lx2160ayrk/arch/arm/dts/Makefile
@@ -348,6 +348,7 @@ dtb-$(CONFIG_FSL_LSCH3) += fsl-ls2080a-q
 	fsl-ls1028a-qds-duart.dtb \
 	fsl-ls1028a-qds-lpuart.dtb \
 	fsl-lx2160a-rdb.dtb \
+	fsl-lx2160a-yrk.dtb \
 	fsl-lx2160a-qds.dtb
 dtb-$(CONFIG_FSL_LSCH2) += fsl-ls1043a-qds-duart.dtb \
 	fsl-ls1043a-qds-lpuart.dtb \
Index: u-boot-LSDK-20.04-lx2160ayrk/arch/arm/cpu/armv8/fsl-layerscape/soc.c
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/arch/arm/cpu/armv8/fsl-layerscape/soc.c
+++ u-boot-LSDK-20.04-lx2160ayrk/arch/arm/cpu/armv8/fsl-layerscape/soc.c
@@ -182,12 +182,14 @@ static void erratum_a009007(void)
 #if defined(CONFIG_FSL_LSCH3)
 static void erratum_a050106(void)
 {
+#ifdef CONFIG_SYS_FSL_ERRATUM_A050106
 #if defined(CONFIG_ARCH_LX2160A)
 	void __iomem *dcsr = (void __iomem *)DCSR_BASE;
 
 	PROGRAM_USB_PHY_RX_OVRD_IN_HI(dcsr + DCSR_USB_PHY1);
 	PROGRAM_USB_PHY_RX_OVRD_IN_HI(dcsr + DCSR_USB_PHY2);
 #endif
+#endif
 }
 /*
  * This erratum requires setting a value to eddrtqcr1 to
Index: u-boot-LSDK-20.04-lx2160ayrk/arch/arm/cpu/armv8/fsl-layerscape/Kconfig
===================================================================
--- u-boot-LSDK-20.04-lx2160ayrk.orig/arch/arm/cpu/armv8/fsl-layerscape/Kconfig
+++ u-boot-LSDK-20.04-lx2160ayrk/arch/arm/cpu/armv8/fsl-layerscape/Kconfig
@@ -219,7 +219,6 @@ config ARCH_LX2160A
 	select SYS_FSL_DDR_VER_50
 	select SYS_FSL_EC1
 	select SYS_FSL_EC2
-	select SYS_FSL_ERRATUM_A050106
 	select SYS_FSL_HAS_RGMII
 	select SYS_FSL_HAS_SEC
 	select SYS_FSL_HAS_CCN508
